/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.sendEmail.UI;

import csheets.core.Cell;
import csheets.ext.contact.Email;
import csheets.ext.sendEmail.SendEmailController;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;

/**
 *
 * @author Paulo
 */
public class SendEmailDialog extends javax.swing.JDialog {

	private Cell[][] selectCells;

	public SendEmailDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		setTitle("Email");
		initComponents();
	}

	public SendEmailDialog(java.awt.Frame parent, boolean modal, Cell[][] cells) {
		super(parent, modal);
		this.selectCells = cells;
		setTitle("Email");
		initComponents();
	}

	public void openItem(String to, String subject, String message) {
		toTxt.setText(to);
		subjectTxt.setText(subject);
		messageTxt.setText(message);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageTxt = new javax.swing.JTextArea();
        subjectTxt = new javax.swing.JTextField();
        toTxt = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("To:");

        jLabel2.setText("Subject:");

        jLabel3.setText("Message:");

        messageTxt.setColumns(20);
        messageTxt.setRows(5);
        jScrollPane1.setViewportView(messageTxt);

        toTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toTxtActionPerformed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subjectTxt)
                            .addComponent(toTxt))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(toTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(subjectTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void toTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toTxtActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_toTxtActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
		try {
			String receivers = toTxt.getText();
			toTxt.setText("");
			if (receivers.trim().isEmpty()) {
				JOptionPane.
					showMessageDialog(null, "No address was introduced!", "Warning", JOptionPane.WARNING_MESSAGE);
				return;
			}
			String[] allReceivers = receivers.split(";");
			for (String receiver : allReceivers) {
				if (!Email.validate(receiver)) {
					JOptionPane.
						showMessageDialog(null, "The email" + receiver + " is invalid!", "ERROR", JOptionPane.ERROR_MESSAGE);
					return;
				}
			}
			String subject = subjectTxt.getText();
			subjectTxt.setText("");
			String message = messageTxt.getText();
			messageTxt.setText("");
			if (SendEmailController.getInstance().
				sendEmail(allReceivers, subject, message, selectCells)) {
				JOptionPane.
					showMessageDialog(null, "Email successfully sent!", message, WIDTH);
				dispose();
			}
		} catch (MessagingException ex) {
			JOptionPane.
				showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_sendButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea messageTxt;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextField subjectTxt;
    private javax.swing.JTextField toTxt;
    // End of variables declaration//GEN-END:variables
}
