/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.searchOnAnotherInstance.ui;

import csheets.core.Spreadsheet;
import csheets.core.SpreadsheetImpl;
import csheets.core.Workbook;
import csheets.ext.searchOnAnotherInstance.NotificationEvent;
import csheets.ext.searchOnAnotherInstance.SearchOnAnotherInstanceController;
import csheets.ext.startsharing.NetworkService;
import csheets.ui.ctrl.UIController;
import java.net.InetAddress;
import java.util.ArrayList;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;

/**
 *
 * @author Paulo Pereira <1130419@isep.ipp.pt>
 */
public class SearchOnAnotherInstanceDialog extends javax.swing.JDialog implements Observer {

    private static UIController uiController;
    private SearchOnAnotherInstanceController controller;
    private static SearchOnAnotherInstanceDialog dialog;
    private int wasActivated = 0;
    private final ArrayList<String> listOfAvailableCleanSheetsInstances = new ArrayList<String>();

    private SearchOnAnotherInstanceDialog() {
        setModal(true);
        controller = new SearchOnAnotherInstanceController();
        initComponents();
        setLocationRelativeTo(null);
        deactivatePanel();
    }

    private void activatePanel() {
        instancesList.setEnabled(true);
        workbookToSearchText.setEnabled(true);
        refreshButton.setEnabled(true);
        searchButton.setEnabled(true);
    }

    private void deactivatePanel() {
        instancesList.setEnabled(false);
        workbookToSearchText.setEnabled(false);
        refreshButton.setEnabled(false);
        searchButton.setEnabled(false);
    }

    public static SearchOnAnotherInstanceDialog getInstance(UIController controller) {
        uiController = controller;
        if (dialog == null) {
            dialog = new SearchOnAnotherInstanceDialog();
        }
        return dialog;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        instancesList = new javax.swing.JList();
        workbookToSearchText = new javax.swing.JTextField();
        refreshButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Receive Notifications:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Deactivated", "Activated" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(instancesList);

        workbookToSearchText.setToolTipText("Enter the name of workbook to search\n");
        workbookToSearchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workbookToSearchTextActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh List");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(workbookToSearchText)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(workbookToSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String workbookToSearch = workbookToSearchText.getText();
        String addressToSend = (String) instancesList.getSelectedValue();
        controller.sendSearchRequest(addressToSend, workbookToSearch);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (((String) jComboBox1.getSelectedItem()).equalsIgnoreCase("Activated")) {
            activatePanel();
            wasActivated = 1;
            controller.startServer(this);
            controller.setVisibility(true);
            retrieveAvailableCleanSheetsInstances();
        } else if (wasActivated == 1) {
            wasActivated = 0;
            deactivatePanel();
            controller.setVisibility(false);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void workbookToSearchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workbookToSearchTextActionPerformed
        searchButton.doClick();
        workbookToSearchText.setText("");
    }//GEN-LAST:event_workbookToSearchTextActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        retrieveAvailableCleanSheetsInstances();
    }//GEN-LAST:event_refreshButtonActionPerformed

    @Override
    public void update(Observable o, Object arg) {
        if (arg instanceof NotificationEvent) {
            String workbookName = ((NotificationEvent) arg).getWorkbookName();
            InetAddress addressToSend = ((NotificationEvent) arg).getAddress();
            JOptionPane.showConfirmDialog(null, "You receive a search request for the workbook "
                    + workbookName + " by the user " + addressToSend.getHostName() + ".", "Notification", JOptionPane.INFORMATION_MESSAGE);
            Workbook openWoorkbook = uiController.getOpenWorkbookByName(workbookName);
            controller.sendWorkbook(addressToSend, openWoorkbook);
        } else if (arg instanceof String) {
            String message = ((String) arg);
            JOptionPane.showConfirmDialog(null, message, "Result", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void retrieveAvailableCleanSheetsInstances() {
        listOfAvailableCleanSheetsInstances.clear();
        Map<InetAddress, Integer> activeInstances = controller.searchInstances();
        for (Map.Entry<InetAddress, Integer> activeInstance : activeInstances.
                entrySet()) {
            listOfAvailableCleanSheetsInstances.add(activeInstance.getKey().
                    getHostName());
        }

        instancesList.
                setListData(listOfAvailableCleanSheetsInstances.toArray());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchOnAnotherInstanceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchOnAnotherInstanceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchOnAnotherInstanceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchOnAnotherInstanceDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList instancesList;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField workbookToSearchText;
    // End of variables declaration//GEN-END:variables

}
